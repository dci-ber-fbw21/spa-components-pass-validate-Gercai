{"ast":null,"code":"var _jsxFileName = \"/home/dci-student/Dev/practice/jscript/react/april/spa-components-pass-validate-Gercai/src/components/passwordForm/index.js\";\nimport React from 'react';\nimport './index.scss';\n\nclass PasswordForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nameTrue: false,\n      passwordTrue: false,\n      errorMsg: \"please SignUp\",\n      confirmation: false\n    };\n    this.submitHandler = this.submitHandler.bind(this);\n    this.bigCase = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    this.special = \"!ยง$%&?\";\n    this.numbers = \"1234567890\";\n  }\n\n  submitHandler(event) {\n    event.preventDefault();\n    this.checkPassword();\n  }\n\n  checkPassword() {\n    let fullName = document.querySelector(\"input[name='name']\").value;\n    let password = document.querySelector(\"input[name='password']\").value;\n    let userName = fullName.split(\"@\")[0];\n    let status = false;\n    let passWordConditions = [[\"0123456789\", \"numbers\"], [\"!ยง$%&?\", \"specialCase\"], [\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", \"bigCase\"]];\n    this.setState({\n      confirmation: true\n    });\n\n    if (fullName.includes(\"@\")) {\n      if (password === userName) {\n        this.setState({\n          errorMsg: \"Password includes Username\"\n        });\n      } else if (password.length < 8) {\n        this.setState({\n          errorMsg: \"Password shound at least have 8 characters\"\n        });\n      }\n\n      passWordConditions.map(condition => {\n        status = false;\n\n        for (let index = 0; index < condition[0].length; index++) {\n          if (password.includes(condition[0].charAt(index))) {\n            status = true;\n          }\n        }\n\n        if (!status) {\n          this.setState({\n            errorMsg: condition[1] + \" is missing\"\n          });\n        }\n      });\n    } else {\n      this.setState({\n        errorMsg: \"no @\"\n      });\n    }\n\n    if (!fullName) {\n      this.setState({\n        errorMsg: \"no Username\"\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"signForm\",\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, \"userName\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, \"password\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"errorMsg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, this.state.errorMsg), /*#__PURE__*/React.createElement(\"button\", {\n      name: \"sign\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, \"Sign Up\")));\n  }\n\n}\n\nexport default PasswordForm;","map":{"version":3,"sources":["/home/dci-student/Dev/practice/jscript/react/april/spa-components-pass-validate-Gercai/src/components/passwordForm/index.js"],"names":["React","PasswordForm","Component","constructor","props","state","nameTrue","passwordTrue","errorMsg","confirmation","submitHandler","bind","bigCase","special","numbers","event","preventDefault","checkPassword","fullName","document","querySelector","value","password","userName","split","status","passWordConditions","setState","includes","length","map","condition","index","charAt","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './index.scss';\n\n\nclass PasswordForm extends React.Component{\n\n    constructor(props){\n        super(props);\n\n        this.state= {\n            nameTrue : false,\n            passwordTrue: false,\n            errorMsg: \"please SignUp\",\n            confirmation: false\n        }\n\n        this.submitHandler = this.submitHandler.bind(this);\n\n        this.bigCase = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n        this.special = \"!ยง$%&?\";\n        this.numbers = \"1234567890\";\n\n    }\n\n\n    submitHandler(event){\n        event.preventDefault();\n        this.checkPassword();\n    }\n\n    checkPassword(){\n\n        let fullName = document.querySelector(\"input[name='name']\").value;\n        let password = document.querySelector(\"input[name='password']\").value;\n        let userName = fullName.split(\"@\")[0];\n        let status = false;\n\n        let passWordConditions = [\n            [\"0123456789\",\"numbers\"],\n            [\"!ยง$%&?\",\"specialCase\"],\n            [\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\"bigCase\"]\n        ]\n\n        this.setState({\n            confirmation: true\n        }) \n\n\n        \n        if(fullName.includes(\"@\")){\n        \n            if(password === userName){\n                this.setState({\n                    errorMsg: \"Password includes Username\"\n                })\n            }\n            else if(password.length < 8){\n                this.setState({\n                    errorMsg: \"Password shound at least have 8 characters\"\n                })   \n            }\n\n            passWordConditions.map(condition => {\n\n                status = false;\n                \n                for(let index = 0; index < condition[0].length; index++){\n                    if(password.includes(condition[0].charAt(index))){                  \n                        status = true;\n                    }\n                }\n                 \n                if (!status){\n                    this.setState({\n                        errorMsg: condition[1] + \" is missing\"\n                    }) \n                }\n            }) \n        }\n\n        else{\n            this.setState({\n                errorMsg: \"no @\"\n            })\n        }\n\n\n        if(!fullName){\n            this.setState({\n                errorMsg: \"no Username\"\n            })\n        }\n\n\n\n\n\n        \n    }\n\n    render(){\n        return(\n            <form className=\"signForm\" onSubmit={this.submitHandler}>\n           \n            <fieldset>\n                <label>userName</label>\n                <input name=\"name\"></input>\n                <label>password</label>\n                <input name=\"password\"></input>\n                \n                <label className=\"errorMsg\">{this.state.errorMsg}</label>\n                <button name=\"sign\">Sign Up</button>\n            </fieldset>\n           \n            </form>\n        )\n    }\n\n}\n\nexport default PasswordForm;"]},"metadata":{},"sourceType":"module"}