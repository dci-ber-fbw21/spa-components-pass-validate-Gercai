{"ast":null,"code":"var _jsxFileName = \"/home/dci-student/Dev/practice/jscript/react/april/spa-components-pass-validate-Gercai/src/components/passwordForm/index.js\";\nimport React from 'react';\nimport './index.scss';\n\nclass PasswordForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nameTrue: false,\n      passwordTrue: false,\n      errorMsg: \"please SignUp\"\n    };\n    this.submitHandler = this.submitHandler.bind(this);\n    this.bigCase = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    this.special = \"!ยง$%&?\";\n    this.numbers = \"1234567890\";\n  }\n\n  submitHandler(event) {\n    event.preventDefault();\n    this.checkPassword();\n  }\n\n  checkPassword() {\n    let name = document.querySelector(\"input[name='name']\").value;\n    let password = document.querySelector(\"input[name='password']\").value;\n    let passWordConditions = [\"0123456789\", \"!ยง$%&?\"];\n\n    if (name.includes(\"@\")) {\n      passWordConditions.map(condition => {\n        for (let index = 0; index < condition.length; index++) {\n          if (!password.includes(condition.charAt(index))) {\n            this.setState({\n              errorMsg: \"This is the end of the line\"\n            });\n          }\n        }\n      });\n    } else {\n      this.setState({\n        errorMsg: \"no @\"\n      });\n    }\n\n    if (!name) {\n      this.setState({\n        errorMsg: \"no Username\"\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"signForm\",\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, \"userName\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, \"password\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"errorMsg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, this.state.errorMsg), /*#__PURE__*/React.createElement(\"button\", {\n      name: \"sign\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, \"Sign Up\")));\n  }\n\n}\n\nexport default PasswordForm;","map":{"version":3,"sources":["/home/dci-student/Dev/practice/jscript/react/april/spa-components-pass-validate-Gercai/src/components/passwordForm/index.js"],"names":["React","PasswordForm","Component","constructor","props","state","nameTrue","passwordTrue","errorMsg","submitHandler","bind","bigCase","special","numbers","event","preventDefault","checkPassword","name","document","querySelector","value","password","passWordConditions","includes","map","condition","index","length","charAt","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;;AAGA,MAAMC,YAAN,SAA2BD,KAAK,CAACE,SAAjC,CAA0C;AAEtCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAY;AACRC,MAAAA,QAAQ,EAAG,KADH;AAERC,MAAAA,YAAY,EAAE,KAFN;AAGRC,MAAAA,QAAQ,EAAE;AAHF,KAAZ;AAMA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AAEA,SAAKC,OAAL,GAAe,4BAAf;AACA,SAAKC,OAAL,GAAe,QAAf;AACA,SAAKC,OAAL,GAAe,YAAf;AAEH;;AAGDJ,EAAAA,aAAa,CAACK,KAAD,EAAO;AAChBA,IAAAA,KAAK,CAACC,cAAN;AACA,SAAKC,aAAL;AACH;;AAEDA,EAAAA,aAAa,GAAE;AAEX,QAAIC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,oBAAvB,EAA6CC,KAAxD;AACA,QAAIC,QAAQ,GAAGH,QAAQ,CAACC,aAAT,CAAuB,wBAAvB,EAAiDC,KAAhE;AAGA,QAAIE,kBAAkB,GAAG,CACrB,YADqB,EAErB,QAFqB,CAAzB;;AASA,QAAGL,IAAI,CAACM,QAAL,CAAc,GAAd,CAAH,EAAsB;AAElBD,MAAAA,kBAAkB,CAACE,GAAnB,CAAuBC,SAAS,IAAI;AAEhC,aAAI,IAAIC,KAAK,GAAG,CAAhB,EAAmBA,KAAK,GAAGD,SAAS,CAACE,MAArC,EAA6CD,KAAK,EAAlD,EAAqD;AAErD,cAAG,CAACL,QAAQ,CAACE,QAAT,CAAkBE,SAAS,CAACG,MAAV,CAAiBF,KAAjB,CAAlB,CAAJ,EAA+C;AAC3C,iBAAKG,QAAL,CAAc;AACVrB,cAAAA,QAAQ,EAAE;AADA,aAAd;AAGH;AACA;AAEJ,OAXD;AAcH,KAhBD,MAiBI;AACA,WAAKqB,QAAL,CAAc;AACVrB,QAAAA,QAAQ,EAAE;AADA,OAAd;AAGH;;AAGD,QAAG,CAACS,IAAJ,EAAS;AACL,WAAKY,QAAL,CAAc;AACVrB,QAAAA,QAAQ,EAAE;AADA,OAAd;AAGH;AAOJ;;AAEDsB,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAM,MAAA,SAAS,EAAC,UAAhB;AAA2B,MAAA,QAAQ,EAAE,KAAKrB,aAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eAMI;AAAO,MAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6B,KAAKJ,KAAL,CAAWG,QAAxC,CANJ,eAOI;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPJ,CAFA,CADJ;AAeH;;AA7FqC;;AAiG1C,eAAeP,YAAf","sourcesContent":["import React from 'react';\nimport './index.scss';\n\n\nclass PasswordForm extends React.Component{\n\n    constructor(props){\n        super(props);\n\n        this.state= {\n            nameTrue : false,\n            passwordTrue: false,\n            errorMsg: \"please SignUp\"\n        }\n\n        this.submitHandler = this.submitHandler.bind(this);\n\n        this.bigCase = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n        this.special = \"!ยง$%&?\";\n        this.numbers = \"1234567890\";\n\n    }\n\n\n    submitHandler(event){\n        event.preventDefault();\n        this.checkPassword();\n    }\n\n    checkPassword(){\n\n        let name = document.querySelector(\"input[name='name']\").value;\n        let password = document.querySelector(\"input[name='password']\").value;\n\n\n        let passWordConditions = [\n            \"0123456789\",\n            \"!ยง$%&?\",\n        ]\n\n\n\n\n        \n        if(name.includes(\"@\")){\n        \n            passWordConditions.map(condition => {\n\n                for(let index = 0; index < condition.length; index++){\n\n                if(!password.includes(condition.charAt(index))){\n                    this.setState({\n                        errorMsg: \"This is the end of the line\"\n                    })\n                }\n                } \n\n            }) \n        \n\n        }\n        else{\n            this.setState({\n                errorMsg: \"no @\"\n            })\n        }\n\n\n        if(!name){\n            this.setState({\n                errorMsg: \"no Username\"\n            })\n        }\n\n\n\n\n\n        \n    }\n\n    render(){\n        return(\n            <form className=\"signForm\" onSubmit={this.submitHandler}>\n           \n            <fieldset>\n                <label>userName</label>\n                <input name=\"name\"></input>\n                <label>password</label>\n                <input name=\"password\"></input>\n                \n                <label className=\"errorMsg\">{this.state.errorMsg}</label>\n                <button name=\"sign\">Sign Up</button>\n            </fieldset>\n           \n            </form>\n        )\n    }\n\n}\n\nexport default PasswordForm;"]},"metadata":{},"sourceType":"module"}